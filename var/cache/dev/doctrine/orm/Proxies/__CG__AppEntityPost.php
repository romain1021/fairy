<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Post extends \App\Entity\Post implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'userId', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'content', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'mediaUrl', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'parentPostId', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'likes', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'hashtags', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'entityManager', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'reposts', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'parentPost'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'userId', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'content', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'mediaUrl', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'parentPostId', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'likes', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'hashtags', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'entityManager', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'reposts', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'parentPost'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Post $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setEntityManager(\Doctrine\ORM\EntityManagerInterface $entityManager): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityManager', [$entityManager]);

        parent::setEntityManager($entityManager);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityManager(): ?\Doctrine\ORM\EntityManagerInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityManager', []);

        return parent::getEntityManager();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId(?int $userId): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', []);

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function getContent(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent(?string $content): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaUrl', []);

        return parent::getMediaUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setMediaUrl(?string $mediaUrl): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMediaUrl', [$mediaUrl]);

        return parent::setMediaUrl($mediaUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentPostId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentPostId', []);

        return parent::getParentPostId();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentPostId(?int $parentPostId): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentPostId', [$parentPostId]);

        return parent::setParentPostId($parentPostId);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentPost(): ?\App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentPost', []);

        return parent::getParentPost();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentPost(?\App\Entity\Post $parentPost): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentPost', [$parentPost]);

        return parent::setParentPost($parentPost);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikes(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikes', []);

        return parent::getLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setLikes(?array $likes): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLikes', [$likes]);

        return parent::setLikes($likes);
    }

    /**
     * {@inheritDoc}
     */
    public function addLike(int $userId): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLike', [$userId]);

        return parent::addLike($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLike(int $userId): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLike', [$userId]);

        return parent::removeLike($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikesCount(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikesCount', []);

        return parent::getLikesCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getHashtags(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHashtags', []);

        return parent::getHashtags();
    }

    /**
     * {@inheritDoc}
     */
    public function setHashtags(?array $hashtags): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHashtags', [$hashtags]);

        return parent::setHashtags($hashtags);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(?\DateTime $createdAt): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getReposts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReposts', []);

        return parent::getReposts();
    }

    /**
     * {@inheritDoc}
     */
    public function addRepost(\App\Entity\Post $repost): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRepost', [$repost]);

        return parent::addRepost($repost);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRepost(\App\Entity\Post $repost): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRepost', [$repost]);

        return parent::removeRepost($repost);
    }

}
